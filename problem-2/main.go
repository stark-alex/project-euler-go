/*
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import "fmt"

func main() {

	// Create a slice representing the Fibonacci sequence under 4,000,000
	seq := make([]int, 2)
	seq[0] = 0
	seq[1] = 1
	for i := 2; ; i++ {
		if seq[i-1]+seq[i-2] > 4000000 {
			break
		}
		seq = append(seq, seq[i-1]+seq[i-2])
	}

	// Loop over the sequence and add up the even values.
	sum := 0
	for _, val := range seq {
		if val%2 == 0 {
			sum += val
		}
	}

	fmt.Println(sum)
}
